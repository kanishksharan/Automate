"""
Substituting Strings with the sub() Method
Regular expressions can not only find text patterns but can also substitute
new text in place of those patterns. The sub() method for Regex objects is
passed two arguments. The first argument is a string to replace any matches.
The second is the string for the regular expression. The sub() method returns
a string with the substitutions applied.
For example, enter the following into the interactive shell:
"""
import re


namesRegex = re.compile(r'Agent \w+')
mo = namesRegex.sub('CENSORED', 'Agent Alice gave the secret documents to Agent Bob.')# This is a string object. Just use normal print to print it out. Don't use mo.group()
print (mo)
#o/p = CENSORED gave the secret documents to CENSORED.

"""
For example, say you want to censor the names of the secret agents by
showing just the first letters of their names. To do this, you could use the
regex Agent (\w)\w* and pass r'\1****' as the first argument to sub(). The \1
in that string will be replaced by whatever text was matched by group 1â€”
that is, the (\w) group of the regular expression.
"""
agentNamesRegex = re.compile(r'Agent (\w)\w*')
mo2 = agentNamesRegex.sub(r'\1****', 'Agent Alice told Agent Carol that Agent Eve knew Agent Bob was a double agent.')
print (mo2)
#o/p = A**** told C**** that E**** knew B**** was a double agent.
